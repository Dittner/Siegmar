<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:button="de.dittner.siegmar.view.common.button.*">
    <fx:Metadata>
        [Event(name="scaleIncreased", type="flash.events.Event")]
        [Event(name="scaleDecreased", type="flash.events.Event")]
    </fx:Metadata>
    <fx:Script><![CDATA[
        import de.dittner.siegmar.domain.fileSystem.body.picture.PictureBody;
        import de.dittner.siegmar.view.common.utils.AppColors;

        //--------------------------------------
        //  picture
        //--------------------------------------
        private var pictureChanged:Boolean = false;
        private var _picture:PictureBody;
        [Bindable("pictureChanged")]
        public function get picture():PictureBody {return _picture;}
        public function set picture(value:PictureBody):void {
            if (_picture != value) {
                _picture = value;
                pictureChanged = true;
                invalidateProperties()
                dispatchEvent(new Event("pictureChanged"));
            }
        }

        //--------------------------------------
        //  title
        //--------------------------------------
        private var _title:String = "";
        [Bindable("titleChanged")]
        public function get title():String {return _title;}
        public function set title(value:String):void {
            if (_title != value) {
                _title = value;
                dispatchEvent(new Event("titleChanged"));
            }
        }

        //--------------------------------------
        //  pictureScale
        //--------------------------------------
        private var _pictureScale:Number = 1;
        [Bindable("pictureScaleChanged")]
        public function get pictureScale():Number {return _pictureScale;}
        public function set pictureScale(value:Number):void {
            if (_pictureScale != value) {
                _pictureScale = value;
                dispatchEvent(new Event("pictureScaleChanged"));
            }
        }

        //--------------------------------------
        //  pictureSize
        //--------------------------------------
        private var _pictureSize:String;
        [Bindable("pictureSizeChanged")]
        public function get pictureSize():String {return _pictureSize;}
        public function set pictureSize(value:String):void {
            if (_pictureSize != value) {
                _pictureSize = value;
                dispatchEvent(new Event("pictureSizeChanged"));
            }
        }

        override protected function commitProperties():void {
            super.commitProperties();
            if (pictureChanged) {
                pictureChanged = false;
                pictureSize = picture && picture.image ? picture.image.width + "/" + picture.image.height : "Kein Bild";
            }
        }
        ]]></fx:Script>

    <s:layout>
        <s:VerticalLayout paddingLeft="10" paddingTop="10" paddingRight="10"/>
    </s:layout>

    <s:HGroup width="100%" gap="10">
        <s:Label text="Name:"
                 width="40%"
                 fontSize="16" fontWeight="bold"
                 mouseChildren="false" mouseEnabled="false"
                 color="{AppColors.HELL_TÜRKIS}"/>

        <s:Label text="{title}"
                 width="60%"
                 fontSize="18"
                 mouseChildren="false" mouseEnabled="false"
                 color="{AppColors.HELL_TÜRKIS}"/>
    </s:HGroup>

    <s:HGroup width="100%" gap="10">
        <s:Label text="Bildgröße:"
                 width="40%"
                 fontSize="16" fontWeight="bold"
                 mouseChildren="false" mouseEnabled="false"
                 color="{AppColors.HELL_TÜRKIS}"/>

        <s:Label id="sizeLbl"
                 text="{pictureSize}"
                 width="60%"
                 fontSize="18"
                 mouseChildren="false" mouseEnabled="false"
                 color="{AppColors.HELL_TÜRKIS}"/>
    </s:HGroup>

    <s:HGroup width="100%" gap="10" verticalAlign="middle">
        <s:Label id="scaleLbl"
                 text="{pictureScale * 100 +'%'}"
                 fontSize="16"
                 mouseChildren="false" mouseEnabled="false"
                 color="{AppColors.HELL_TÜRKIS}"/>

        <button:RoundButton id="incScaleBtn"
                            fontSize="16"
                            label="+" width="25" height="25" color="#ffFFff"
                            click="dispatchEvent(new Event('scaleIncreased'))"/>

        <button:RoundButton id="decScaleBtn"
                            fontSize="16"
                            label="–" width="25" height="25" color="#ffFFff"
                            click="dispatchEvent(new Event('scaleDecreased'))"/>
    </s:HGroup>

</s:Group>
