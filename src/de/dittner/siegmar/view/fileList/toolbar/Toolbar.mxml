<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:button="de.dittner.siegmar.view.common.button.*"
         xmlns:common="cosmoLib.components.styleComponents.*">
    <fx:Metadata>
        [Event(name="actionSelected", type="de.dittner.siegmar.view.fileList.toolbar.ToolbarActionEvent")]
    </fx:Metadata>
    <fx:Script><![CDATA[
        import de.dittner.siegmar.domain.fileSystem.body.links.BookLink;
        import de.dittner.siegmar.view.common.button.ToolButton;
        import de.dittner.siegmar.view.common.utils.AppColors;

        //--------------------------------------
        //  showNoteBtns
        //--------------------------------------
        private var _showNoteBtns:Boolean = true;
        [Bindable("showNoteBtnsChanged")]
        public function get showNoteBtns():Boolean {return _showNoteBtns;}
        public function set showNoteBtns(value:Boolean):void {
            if (_showNoteBtns != value) {
                _showNoteBtns = value;
                dispatchEvent(new Event("showNoteBtnsChanged"));
            }
        }

        //--------------------------------------
        //  showFavoriteBtn
        //--------------------------------------
        private var _showFavoriteBtn:Boolean = false;
        [Bindable("showFavoriteBtnChanged")]
        public function get showFavoriteBtn():Boolean {return _showFavoriteBtn;}
        public function set showFavoriteBtn(value:Boolean):void {
            if (_showFavoriteBtn != value) {
                _showFavoriteBtn = value;
                dispatchEvent(new Event("showFavoriteBtnChanged"));
            }
        }

        //--------------------------------------
        //  showCloseBtn
        //--------------------------------------
        private var _showCloseBtn:Boolean = true;
        [Bindable("showCloseBtnChanged")]
        public function get showCloseBtn():Boolean {return _showCloseBtn;}
        public function set showCloseBtn(value:Boolean):void {
            if (_showCloseBtn != value) {
                _showCloseBtn = value;
                dispatchEvent(new Event("showCloseBtnChanged"));
            }
        }
        //--------------------------------------
        //  showSettingsBtn
        //--------------------------------------
        private var _showSettingsBtn:Boolean = true;
        [Bindable("showSettingsBtnChanged")]
        public function get showSettingsBtn():Boolean {return _showSettingsBtn;}
        public function set showSettingsBtn(value:Boolean):void {
            if (_showSettingsBtn != value) {
                _showSettingsBtn = value;
                dispatchEvent(new Event("showSettingsBtnChanged"));
            }
        }

        //--------------------------------------
        //  editBtnEnabled
        //--------------------------------------
        private var _editBtnEnabled:Boolean = false;
        [Bindable("editBtnEnabledChanged")]
        public function get editBtnEnabled():Boolean {return _editBtnEnabled;}
        public function set editBtnEnabled(value:Boolean):void {
            if (_editBtnEnabled != value) {
                _editBtnEnabled = value;
                dispatchEvent(new Event("editBtnEnabledChanged"));
            }
        }

        //--------------------------------------
        //  removeBtnEnabled
        //--------------------------------------
        private var _removeBtnEnabled:Boolean = false;
        [Bindable("removeBtnEnabledChanged")]
        public function get removeBtnEnabled():Boolean {return _removeBtnEnabled;}
        public function set removeBtnEnabled(value:Boolean):void {
            if (_removeBtnEnabled != value) {
                _removeBtnEnabled = value;
                dispatchEvent(new Event("removeBtnEnabledChanged"));
            }
        }

        //--------------------------------------
        //  favoriteBtnEnabled
        //--------------------------------------
        private var _favoriteBtnEnabled:Boolean = false;
        [Bindable("favoriteBtnEnabledChanged")]
        public function get favoriteBtnEnabled():Boolean {return _favoriteBtnEnabled;}
        public function set favoriteBtnEnabled(value:Boolean):void {
            if (_favoriteBtnEnabled != value) {
                _favoriteBtnEnabled = value;
                dispatchEvent(new Event("favoriteBtnEnabledChanged"));
            }
        }

        private function btnClickHandler(event:MouseEvent):void {
            dispatchEvent(new ToolbarActionEvent(ToolbarActionEvent.ACTION_SELECTED, (event.target as ToolButton).toolId));
        }
        ]]></fx:Script>
    <common:Background width="100%" height="100%" color="{AppColors.TOOLBAR}"/>

    <s:VGroup width="100%" height="100%" verticalAlign="bottom"
              paddingLeft="5" paddingRight="5" paddingTop="10" paddingBottom="10" gap="10">

        <button:ToolButton toolId="{ToolAction.LOGOUT}"
                           image="@Embed(source='/assets/btn/logout_btn.png')"
                           click="btnClickHandler(event)"/>

        <button:ToolButton toolId="{ToolAction.SETTINGS}"
                           image="@Embed(source='/assets/btn/settings_btn.png')"
                           visible="{showSettingsBtn}"
                           includeInLayout="{showSettingsBtn}"
                           click="btnClickHandler(event)"/>

        <button:ToolButton toolId="{ToolAction.CLOSE}"
                           image="@Embed(source='/assets/btn/close_btn.png')"
                           visible="{showCloseBtn}"
                           includeInLayout="{showCloseBtn}"
                           click="btnClickHandler(event)"/>

        <s:Spacer height="100%"/>

        <button:ToolButton id="addBtn"
                           toolId="{ToolAction.CREATE}"
                           image="@Embed(source='/assets/btn/add_btn.png')"
                           click="btnClickHandler(event)"
                           visible="{showNoteBtns}"/>

        <button:ToolButton id="editBtn"
                           enabled="{editBtnEnabled}"
                           toolId="{ToolAction.EDIT}"
                           image="@Embed(source='/assets/btn/edit_btn.png')"
                           click="btnClickHandler(event)"
                           visible="{showNoteBtns}"/>

        <button:ToolButton id="removeBtn"
                           enabled="{removeBtnEnabled}"
                           toolId="{ToolAction.REMOVE}"
                           image="@Embed(source='/assets/btn/delete_btn.png')"
                           click="btnClickHandler(event)"
                           visible="{showNoteBtns}"/>

        <button:ToolButton id="favoriteBtn"
                           enabled="{favoriteBtnEnabled}"
                           toolId="{ToolAction.ADD_TO_FAVORITE}"
                           image="@Embed(source='/assets/btn/favorite_btn.png')"
                           click="btnClickHandler(event)"
                           visible="{showFavoriteBtn}"
                           includeInLayout="{showFavoriteBtn}"/>
    </s:VGroup>

</s:Group>
