<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:input="dittner.gsa.view.common.input.*"
         xmlns:button="dittner.gsa.view.common.button.*">

    <fx:Script><![CDATA[
        import dittner.gsa.domain.fileSystem.FileHeader;
        import dittner.gsa.domain.fileSystem.FileOptionKeys;
        import dittner.gsa.domain.fileSystem.FileType;
        import dittner.gsa.view.common.form.FileFormMode;
        import dittner.gsa.view.common.utils.AppColors;
        import dittner.gsa.view.common.utils.FontName;

        //--------------------------------------
        //  mode
        //--------------------------------------
        private var _mode:String = FileFormMode.ADD;
        [Bindable("modeChanged")]
        public function get mode():String {return _mode;}

        [Bindable("modeChanged")]
        public function get isAddMode():Boolean {return _mode == FileFormMode.ADD;}

        [Bindable("modeChanged")]
        public function get isRemoveMode():Boolean {return _mode == FileFormMode.REMOVE;}

        private function setFileType(fileType:uint):void {
            switch (fileType) {
                case FileType.FOLDER :
                    setCurrentState("folder");
                    break;
                case FileType.ARTICLE :
                    setCurrentState("article");
                    break;
                case FileType.DICTIONARY :
                    setCurrentState("dictionary");
                    break;
                case FileType.PHOTOALBUM :
                    setCurrentState("album");
                    break;
                default :
                    throw new Error("Unknown file type: " + fileType);
            }
        }

        private var reservedTitleHash:Object = {};
        public function add(reservedTitleHash:Object):void {
            this.reservedTitleHash = reservedTitleHash;
            _mode = FileFormMode.ADD;
            dispatchEvent(new Event("modeChanged"));
        }

        public function edit(fileHeader:FileHeader, reservedTitleHash:Object):void {
            this.reservedTitleHash = reservedTitleHash;
            _mode = FileFormMode.EDIT;
            titleInput.text = fileHeader.title;
            pwdInput.text = fileHeader.password;
            authorInput.text = fileHeader.options[FileOptionKeys.AUTHOR] || "";
            dateInput.text = fileHeader.options[FileOptionKeys.DATE_CREATED] || "";
            setFileType(fileHeader.fileType);
            dispatchEvent(new Event("modeChanged"));
        }

        public function remove(fileHeader:FileHeader):void {
            _mode = FileFormMode.REMOVE;
            removeLbl.text = "Sind Sie sicher, das Sie entfernen möchten?\n\n";
            removeLbl.text += fileHeader.isFolder ? "Ordner: " : "Datei: ";
            removeLbl.text += fileHeader.title.toUpperCase();
            dispatchEvent(new Event("modeChanged"));
        }

        public function clear():void {
            titleInput.text = "";
            authorInput.text = "";
            dateInput.text = "";
            pwdInput.text = "";
            setCurrentState("folder");
        }

        private function getTitle(formMode:String):String {
            return formMode == FileFormMode.ADD ? "NEUES DOKUMENT" : formMode == FileFormMode.EDIT ? "AUFBEREITUNG" : "ENTFERNUNG";
        }

        private function isApplyBtnEnabled(mode:String, docTitle:String):Boolean {
            if (mode == FileFormMode.REMOVE) return true;
            else return docTitle && !reservedTitleHash[docTitle];
        }

        private function radioBtnClickHandler(event:MouseEvent):void {
            setFileType((event.target as RadioButton).value as uint);
        }

        ]]></fx:Script>

    <s:states>
        <s:State name="folder"/>
        <s:State name="article"/>
        <s:State name="dictionary"/>
        <s:State name="album"/>
    </s:states>

    <s:BitmapImage width="100%" height="100%" source="@Embed(source='/form_bg.png')" fillMode="repeat"/>

    <s:VGroup width="600" horizontalCenter="0" top="10" bottom="10" gap="20">

        <s:Label text="{getTitle(mode)}"
                 width="100%"
                 fontFamily="{FontName.TAHOMA}" fontSize="30"
                 mouseChildren="false" mouseEnabled="false" paddingBottom="50"
                 color="{AppColors.TEXT_WHITE}"/>

        <s:Label text="Wählen Sie bitte den Typ des Dokuments aus:"
                 visible="{isAddMode}" includeInLayout="{isAddMode}"
                 width="100%" paddingBottom="-20"
                 fontFamily="{FontName.TAHOMA}" fontSize="14"
                 mouseChildren="false" mouseEnabled="false"
                 color="{AppColors.TEXT_LIGHT}"/>

        <s:Group width="100%" visible="{isAddMode}" includeInLayout="{isAddMode}">
            <s:layout>
                <s:TileLayout verticalGap="0" horizontalGap="10" paddingBottom="0" paddingTop="0"
                              requestedColumnCount="3" rowHeight="50"
                              columnWidth="200"/>
            </s:layout>

            <s:RadioButton id="folderBtn"
                           groupName="radioBar"
                           width="200"
                           value="{FileType.FOLDER}"
                           selected="true"
                           label="Direktory"
                           click="radioBtnClickHandler(event)"/>

            <s:RadioButton id="articleRadioBtn"
                           groupName="radioBar"
                           width="200"
                           enabled="false"
                           value="{FileType.ARTICLE}"
                           label="Artikel"
                           click="radioBtnClickHandler(event)"/>

            <s:RadioButton id="dictionaryRadioBtn"
                           groupName="radioBar"
                           width="200"
                           value="{FileType.DICTIONARY}"
                           label="Wörterbuch"
                           click="radioBtnClickHandler(event)"/>

            <s:RadioButton id="albumRadioBtn"
                           groupName="radioBar"
                           enabled="false"
                           width="200"
                           value="{FileType.PHOTOALBUM}"
                           label="Album"
                           click="radioBtnClickHandler(event)"/>
        </s:Group>

        <s:VGroup width="100%"
                  visible="{!isRemoveMode}" includeInLayout="{!isRemoveMode}">
            <input:TextInputForm id="titleInput" width="100%" title="Titel:"/>

            <input:TextInputForm id="authorInput" width="100%" title="Autor:"
                                 visible.folder="false" includeInLayout.folder="false"/>
            <input:TextInputForm id="dateInput" width="100%" title="Datum der Ausgabe:"
                                 visible.folder="false" includeInLayout.folder="false"/>
            <input:TextInputForm id="pwdInput" width="100%" title="Parole:"/>
        </s:VGroup>

        <s:Label id="removeLbl"
                 visible="{isRemoveMode}" includeInLayout="{isRemoveMode}"
                 width="100%" textAlign="center"
                 fontFamily="{FontName.TAHOMA}" fontSize="30"
                 mouseChildren="false" mouseEnabled="false"
                 color="{AppColors.TEXT_LIGHT}"/>

        <s:Spacer height="50"/>

        <s:HGroup width="100%" gap="10">
            <button:GrayButton id="cancelBtn"
                               width="100%"
                               label="Abbrechen"/>

            <button:BlackButton id="applyBtn"
                                width="100%"
                                label="Bestätigen"
                                enabled="{isApplyBtnEnabled(mode, titleInput.text)}"/>
        </s:HGroup>
    </s:VGroup>

</s:Group>
