<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:colorchooser="dittner.gsa.view.common.colorChooser.*"
         xmlns:common="cosmoLib.components.styleComponents.*"
         xmlns:actionform="dittner.gsa.view.painting.actionForm.*"
         xmlns:button="dittner.gsa.view.common.button.*">

    <fx:Script><![CDATA[
        import dittner.gsa.view.common.colorChooser.SelectColorEvent;
        import dittner.gsa.view.common.popup.SimplePopup;
        import dittner.gsa.domain.fileSystem.body.picture.action.DrawLinesAction;
        import dittner.gsa.domain.fileSystem.body.picture.action.LinesDisplacementAction;
        import dittner.gsa.domain.fileSystem.body.picture.action.PaintingAction;

        private static const USE_COLOR:String = "USE_COLOR";
        private static const USE_BG:String = "USE_BG";

        //--------------------------------------
        //  actionChanged
        //--------------------------------------
        private var actionChanged:Boolean = false;
        private var _action:PaintingAction;
        [Bindable("actionChanged")]
        public function get action():PaintingAction {return _action;}
        public function set action(value:PaintingAction):void {
            if (_action != value) {
                _action = value;
                actionChanged = true;
                invalidateProperties();
                dispatchEvent(new Event("actionChanged"));
            }
        }

        override protected function commitProperties():void {
            super.commitProperties();
            if (actionChanged && action) {
                actionChanged = false;
                useColorBtn.selected = !action.useBg;
                useBgBtn.selected = action.useBg;
                colorChooser.selectedColor = action.bgColor;
                colorEnabledCheckBox.selected = action.bgColorEnabled;

                if (action.key == PaintingAction.DRAW_LINES)
                    drawLinesForm.action = action as DrawLinesAction;
                else if (action.key == PaintingAction.LINES_DISPLACEMENT)
                    linesDisplacementForm.action = action as LinesDisplacementAction;
            }
        }
        private function radioBtnClickHandler(event:MouseEvent):void {
            if (action) action.useBg = useBgBtn.selected;
        }

        private function showColorChooser():void {
            SimplePopup.show(colorChooser, true);
        }

        private function bgColorSelected(event:SelectColorEvent):void {
            SimplePopup.close();
        }

        public function storeChanges():void {
            action.bgColor = colorChooser.selectedColor;
            action.useBg = useBgBtn.selected;
            action.bgColorEnabled = colorEnabledCheckBox.selected;

            if (action.key == PaintingAction.DRAW_LINES) drawLinesForm.storeChanges();
            else if (action.key == PaintingAction.LINES_DISPLACEMENT) linesDisplacementForm.storeChanges();
        }

        private function colorToHex(color:uint):String {
            return '#' + color.toString(16);
        }
        ]]></fx:Script>

    <fx:Declarations>
        <colorchooser:ColorChooser id="colorChooser"
                                   colorSelected="bgColorSelected(event)"
                                   verticalCenter="0" horizontalCenter="0"/>
    </fx:Declarations>

    <s:layout>
        <s:VerticalLayout gap="10" paddingTop="10" paddingBottom="10"/>
    </s:layout>

    <s:Label text="Einstellungen der Aktion:" color="#ffFFff"/>

    <s:HGroup gap="10" verticalAlign="middle">
        <s:RadioButton id="useColorBtn"
                       groupName="radioBar"
                       width="250"
                       value="{USE_COLOR}"
                       selected="true"
                       label="eine Farbe auszuwÃ¤hlen"
                       click="radioBtnClickHandler(event)"/>

        <s:CheckBox id="colorEnabledCheckBox" selected="true"/>

        <s:Group click="showColorChooser()">
            <common:Background color="{colorChooser.selectedColor}"
                               strokeColor="#ffFFff" weight="1"
                               width="20" height="20"/>
        </s:Group>
        <s:Label text="{colorToHex(colorChooser.selectedColor)}" color="#ffFFff"/>
    </s:HGroup>

    <s:RadioButton id="useBgBtn"
                   groupName="radioBar"
                   width="250"
                   value="{USE_BG}"
                   label="die Hintergrund verwenden"
                   click="radioBtnClickHandler(event)"/>

    <actionform:DrawLinesForm id="drawLinesForm"
                              visible="{action.key == PaintingAction.DRAW_LINES}"
                              includeInLayout="{action.key == PaintingAction.DRAW_LINES}"
                              width="100%" height="100%"/>

    <actionform:LinesDisplacementForm id="linesDisplacementForm"
                                      visible="{action.key == PaintingAction.LINES_DISPLACEMENT}"
                                      includeInLayout="{action.key == PaintingAction.LINES_DISPLACEMENT}"
                                      width="100%" height="100%"/>

    <button:StrokeButton id="applyBtn"
                         width="100%"
                         label="anzuwenden" color="#ffFFff"/>
</s:Group>
